Index: src/main/Library.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package main;\r\n\r\nimport items.Book;\r\nimport items.Magazine;\r\nimport items.Newspaper;\r\nimport main.exceptions.*;\r\nimport peoples.Member;\r\nimport peoples.Staff;\r\nimport java.util.ArrayList;\r\nimport java.util.Scanner;\r\n\r\nimport org.apache.logging.log4j.LogManager;\r\nimport org.apache.logging.log4j.Logger;\r\n\r\npublic class Library implements ILibrary {\r\n\r\n    private static final Logger LOG = LogManager.getLogger(main.Library.class);\r\n    private static final String libraryName = \"Billerica Public Library\";\r\n    private static final String website = \"https://billericalibrary.org/\";\r\n    private static final String address = \"15 Concord Rd, Billerica, MA 01821\";\r\n    private static final String phone = \"(978) 671-0949\";\r\n    private static ArrayList<Book> bookList;\r\n    private static ArrayList<Magazine> magazineList;\r\n    private static ArrayList<Member> memberList;\r\n    private static ArrayList<Staff> staffList;\r\n    private static ArrayList<Newspaper> newspaper;\r\n\r\n    public Library() {\r\n    }\r\n\r\n    public static ArrayList<Member> getMemberList() {\r\n        return memberList;\r\n    }\r\n\r\n    public void setMemberList(ArrayList<Member> memberList) {\r\n        this.memberList = memberList;\r\n    }\r\n\r\n    public ArrayList<Staff> getStaffList() {\r\n        return staffList;\r\n    }\r\n\r\n    public void setStaffList(ArrayList<Staff> staffList) {\r\n        this.staffList = staffList;\r\n    }\r\n\r\n    public ArrayList<Book> getBookList() {\r\n        return bookList;\r\n    }\r\n\r\n    public void setBookList(ArrayList<Book> bookList) {\r\n        this.bookList = bookList;\r\n    }\r\n\r\n    public ArrayList<Magazine> getMagazineList() {\r\n        return magazineList;\r\n    }\r\n\r\n    public void setMagazineList(ArrayList<Magazine> magazineList) {\r\n        this.magazineList = magazineList;\r\n    }\r\n\r\n    public ArrayList<Newspaper> getNewspaper() {\r\n        return newspaper;\r\n    }\r\n\r\n    public void setNewspaper(ArrayList<Newspaper> newspaper) {\r\n        this.newspaper = newspaper;\r\n    }\r\n\r\n    public void addBook(Book book) {\r\n        getBookList().add(book);\r\n    }\r\n\r\n    public boolean deleteBook(Book book, Staff staff) throws NotAuthorizedForAction {\r\n        if (staff.getDesignation().equals(\"Manager\")) {\r\n            if (this.getBookList().contains(book.getItemId())) {\r\n                getBookList().remove(book);\r\n            }\r\n            return true;\r\n        }\r\n        throw new NotAuthorizedForAction(\"You are not authorized to delete a book\");\r\n    }\r\n\r\n    public void addMember(Member member) throws PhoneNumberNotValid {\r\n        if (member.phoneNo.length() == 10) {\r\n            getMemberList().add(member);\r\n        } else {\r\n            throw new PhoneNumberNotValid(\"This is not a valid Phone number\");\r\n        }\r\n    }\r\n\r\n    public final boolean deleteMember(Staff staff, Member member) throws NotAuthorizedForAction {\r\n        if (staff.getDesignation().equals(\"Manager\")) {\r\n            if (this.getMemberList().contains(member.getLibraryCardId())) {\r\n                getMemberList().remove(member);\r\n            }\r\n            return true;\r\n        }\r\n        throw new NotAuthorizedForAction(\"You are not authorized to delete member\");\r\n    }\r\n\r\n    public boolean issue(Member member, Book book) throws BorrowingBookLimitOver {\r\n        if (member.getAddIssuedBooks() > 3) {\r\n            throw new BorrowingBookLimitOver(\"You can't issue more than three books\");\r\n        } else {\r\n            member.addIssuedBook(book);\r\n            bookList.remove(book);\r\n            return true;\r\n        }\r\n    }\r\n\r\n    public boolean reissue(Member member, Book book) throws ReissueNotValid {\r\n        try {\r\n            int reissueCount = 0;\r\n            if (this.issue(member, book) == true && reissueCount < 1) {\r\n                this.issue(member, book);\r\n                reissueCount++;\r\n                return true;\r\n            }\r\n            throw new ReissueNotValid(\"Reissue is allowed only once\");\r\n        } catch (BorrowingBookLimitOver e) {\r\n            LOG.error(\"Duplicate entry of Issued book\");\r\n            return false;\r\n        }\r\n    }\r\n\r\n    public boolean returnBook(Member member, Book book) {\r\n        if (member.issuedBook.equals(book)) {\r\n            bookList.add(book);\r\n            member.issuedBook.remove(book);\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    public static void searchBook(Book book){\r\n        Scanner sc = new Scanner(System.in);\r\n        try{\r\n            LOG.info(\"search by title\");\r\n            String searchTitle = sc.nextLine();\r\n            if (searchTitle.isBlank()){\r\n                throw new InvalidInput(\"write title of book to search a book\");\r\n            }\r\n            if(book.getTitle().contains(searchTitle)){\r\n                LOG.info(\"Search result:  \" + book);\r\n            } LOG.info(\"no Book found\");\r\n        } catch(InvalidInput e){\r\n            LOG.info(\"Give valid search input\");\r\n        }\r\n    }\r\n\r\n    public static void printLibraryInfo() {\r\n        System.out.println(\"Library Name: \" + libraryName + '\\'' +\r\n                \"Library address: \" + address + '\\'' +\r\n                \"Phone Number: \" + phone + \"\\'\" +\r\n                \"Website: \" + website + '\\'');\r\n    }\r\n\r\n    public static void printBookInfo(Book book) {\r\n        for (Book i : bookList) {\r\n            System.out.println(\"BookList : \" + book);\r\n        }\r\n    }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/Library.java b/src/main/Library.java
--- a/src/main/Library.java	(revision 475b88e57796779165ad97034273e74cafbfbac8)
+++ b/src/main/Library.java	(date 1700152171818)
@@ -11,7 +11,6 @@
 
 import org.apache.logging.log4j.LogManager;
 import org.apache.logging.log4j.Logger;
-
 public class Library implements ILibrary {
 
     private static final Logger LOG = LogManager.getLogger(main.Library.class);
